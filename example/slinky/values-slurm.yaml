# SPDX-FileCopyrightText: Copyright (C) SchedMD LLC.
# SPDX-License-Identifier: Apache-2.0

#
# Debug configuration.
# @ignored
debug:
  #
  # -- (bool)
  # Enables debug configuration.
  enabled: false
  #
  # -- (bool)
  # Allow a locally running operator to communicate with slurm cluster via port-forward.
  # NOTE: use when running the operator in a local debugger.
  localOperator: true

#
# -- (string)
# Overrides the name of the release.
nameOverride: ""

#
# -- (string)
# Overrides the full name of the release.
fullnameOverride: ""

#
# -- (string)
# Overrides the namespace of the release.
namespaceOverride: ""

#
# -- (list)
# Set the secrets for image pull.
# Ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []
  # - name: regcred

#
# -- (string)
# Set the image pull policy.
imagePullPolicy: IfNotPresent

#
# -- (string)
# Set the priority class to use.
# Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
priorityClassName: ""

#
# Slurm JWT authentication.
jwt:
  #
  # JWT hs256 configurations.
  hs256:
    #
    # -- (string)
    # The existing secret to use otherwise one will be generated.
    existingSecret: ""

#
# Slurm configurations.
slurm:
  #
  # Slurm authentication configurations.
  auth:
    #
    # -- (string)
    # The existing secret to use otherwise one will be generated.
    existingSecret: ""
  #
  # -- (string)
  # Extra slurmdbd configuration lines to append to `slurmdbd.conf`.
  # WARNING: Values can override existing ones.
  # Ref: https://slurm.schedmd.com/slurmdbd.conf.html
  extraSlurmdbdConf: |-
    CommitDelay=1
  #
  # -- (string)
  # Extra slurm configuration lines to append to `slurm.conf`.
  # WARNING: Values can override existing ones.
  # Ref: https://slurm.schedmd.com/slurm.conf.html
  extraSlurmConf: |-
    SchedulerParameters=batch_sched_delay=20,bf_continue,bf_interval=300,bf_min_age_reserve=10800,bf_resolution=600,bf_yield_interval=1000000,partition_job_depth=500,sched_max_job_start=200,sched_min_interval=2000000
    DefMemPerCPU=1
  #
  # -- (map[string]string)
  # Optional raw Slurm configuration files, as a map.
  # The map key represents the config file by name; the map value represents config file contents as a string.
  # Ref: https://slurm.schedmd.com/man_index.html#configuration_files
  configFiles: {}
    # acct_gather.conf: |
    #   # Ref: https://slurm.schedmd.com/acct_gather.conf.html
    # burst_buffer.conf: |
    #   # Ref: https://slurm.schedmd.com/burst_buffer.conf.html
    #  gres.conf: |
    #   # Ref: https://slurm.schedmd.com/gres.conf.html
    # helpers.conf: |
    #   # Ref: https://slurm.schedmd.com/helpers.conf.html
    # job_container.conf: |
    #   # Ref: https://slurm.schedmd.com/job_container.conf.html
    # mpi.conf: |
    #   # Ref: https://slurm.schedmd.com/mpi.conf.html
    # oci.conf: |
    #   # Ref: https://slurm.schedmd.com/oci.conf.html
    # plugstack.conf: |
    #   # Ref: https://slurm.schedmd.com/plugstack.conf.html
    # topology.conf: |
    #   # Ref: https://slurm.schedmd.com/topology.conf.html
  #
  # -- (map[string]string)
  # The Prolog scripts for compute nodesets, as a map.
  # The map key represents the filename; the map value represents the script contents.
  # WARNING: The script must include a shebang (!) so it can be executed correctly by Slurm.
  # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Prolog
  # Ref: https://slurm.schedmd.com/prolog_epilog.html
  # Ref: https://en.wikipedia.org/wiki/Shebang_(Unix)
  prologScripts: {}
    # empty: |
    #   #!/usr/bin/env bash
    #   exit 0
  #
  # -- (map[string]string)
  # The Epilog scripts for compute nodesets, as a map.
  # The map key represents the filename; the map value represents the script contents.
  # WARNING: The script must include a shebang (!) so it can be executed correctly by Slurm.
  # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Epilog
  # Ref: https://slurm.schedmd.com/prolog_epilog.html
  # Ref: https://en.wikipedia.org/wiki/Shebang_(Unix)
  epilogScripts: {}
    # empty: |
    #   #!/usr/bin/env bash
    #   exit 0

#
# Slurm authcred (sackd) configurations.
authcred:
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/sackd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
  resources: {}
    # requests:
    #   cpu: 1
    #   memory: 1Gi
    # limits:
    #   cpu: 2
    #   memory: 4Gi

#
# Slurm controller (slurmctld) configurations.
controller:
  #
  # -- (bool)
  # Enables the controller node.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmctld
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (string)
  # Set the priority class to use.
  # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
  priorityClassName:
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
  resources: {}
    # requests:
    #   cpu: 1
    #   memory: 1Gi
    # limits:
    #   cpu: 2
    #   memory: 4Gi
  #
  # Define a persistent volume for the slurm controller to store its save-state.
  # Used to recover from system failures or from pod upgrades.
  persistence:
    #
    # -- (string)
    # Name of an existing `PersistentVolumeClaim` to use instead of creating one from definition.
    # NOTE: When not empty, the other persistence fields will be ignored.
    existingClaim: ""
    #
    # -- (object)
    # Create a `PersistentVolumeClaim` with these annotations.
    annotations: {}
    #
    # -- (object)
    # Create a `PersistentVolumeClaim` with these labels.
    labels: {}
    #
    # -- (string)
    # Create a `PersistentVolumeClaim` with this storage class.
    # Note if running on Microk8s and using the hostpath-storage, set storageClass to `microk8s-hostpath`.
    storageClass: standard
    #
    # -- (list)
    # Create a `PersistentVolumeClaim` with these access modes.
    accessModes:
      - ReadWriteOnce
    #
    # -- (string)
    # Create a `PersistentVolumeClaim` with this storage size.
    size: 4Gi
    #
    # -- (object)
    # Selector to match an existing `PersistentVolume`.
    selector: {}
      # matchLabels:
      #   app: foo

#
# Slurm compute (slurmd) configurations.
compute:
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Default image for the nodeset pod (slurmd)
  # Each nodeset may override this setting.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: #docker-registry/docker-repository/docker-image
    #
    # -- (string)
    # Set the image tag to use.
    # @default -- The Release appVersion.
    tag: #image-tag
  #
  # -- (list)
  # Slurm NodeSets by object list.
  nodesets:
      #
      # -- (string)
      # Name of NodeSet. Must be unique.
    - name: gpu-node
      #
      # -- (bool)
      # Enables the NodeSet in Slurm.
      enabled: true
      #
      # -- (integer)
      # Set the number of replicas to deploy.
      # NOTE: if empty, all nodes matching affinity will have a replica (like DaemonSet).
      replicas: 1
      #
      # -- (int)
      # The minimum number of seconds for which a newly created NodeSet Pod should be ready
      # without any of its container crashing, for it to be considered available.
      minReadySeconds: 0
      #
      # -- (string)
      # Set the image pull policy.
      imagePullPolicy: IfNotPresent
      #
      # Set the image to use.
      image:
        #
        # -- (string)
        # Set the image repository to use.
        repository: ""
        #
        # -- (string)
        # Set the image tag to use.
        tag: ""
      #
      # -- (string)
      # Set the priority class to use.
      # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
      priorityClassName: ""
      #
      # -- (object)
      # Set container resource requests and limits for Kubernetes Pod scheduling.
      # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
      resources:
        limits:
          cpu: 16
          memory: 132Gi
          amd.com/gpu: 8
      #
      # -- (map)
      # Selector which must match a node's labels for the pod to be scheduled on that node.
      nodeSelector:
        kubernetes.io/os: linux
      #
      # -- (object)
      # Set affinity for Kubernetes Pod scheduling.
      affinity: {}
        # nodeAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     nodeSelectorTerms:
        #       - matchExpressions:
        #           - key: "kubernetes.io/os"
        #             operator: In
        #             values:
        #               - linux
        # podAntiAffinity:
        #   requiredDuringSchedulingIgnoredDuringExecution:
        #     - topologyKey: "kubernetes.io/hostname"
        #       labelSelector:
        #         matchExpressions:
        #           - key: "app.kubernetes.io/name"
        #             operator: In
        #             values:
        #               - slurmctld
        #               - slurmdbd
        #               - slurmrestd
      #
      # -- (object)
      # Set the update strategy configuration.
      updateStrategy:
        #
        # -- (string)
        # Set the update strategy type.
        # Can be either: "RollingUpdate"; "OnDelete".
        type: RollingUpdate
        #
        # -- (object)
        # Define the rolling update policy.
        # Only used when "updateStrategy.type=RollingUpdate".
        rollingUpdate:
          #
          # -- (string)
          # The maximum number of pods that can be unavailable during the update.
          # Value can be an absolute number (ex: 5) or a percentage of desired
          # pods (ex: 10%). Absolute number is calculated from percentage by
          # rounding up. This can not be 0. Defaults to 1.
          maxUnavailable: 20%
          #
          # -- (int)
          # Partition indicates the number of NodeSet pods that should be
          # not be updated to the latest version.
          partition: 0
          #
          # -- (bool)
          # Pause will halt rollingUpdate while this value is true.
          paused: false
      #
      # -- (object)
      # The policy used for PVCs created from the NodeSet VolumeClaimTemplates.
      persistentVolumeClaimRetentionPolicy:
        #
        # -- (string)
        # WhenDeleted specifies what happens to PVCs created from NodeSet
        # VolumeClaimTemplates when the NodeSet is deleted. The default policy
        # of `Retain` causes PVCs to not be affected by NodeSet deletion. The
        # `Delete` policy causes those PVCs to be deleted.
        whenDeleted: Retain
      #
      # --(list)
      # List of claims that pods are allowed to reference.
      # The NodeSet controller is responsible for mapping network identities to
      # claims in a way that maintains the identity of a pod.
      volumeClaimTemplates: []
        # - metadata:
        #     name: data
        #   spec:
        #     storageClassName: standard
        #     mountPath: /mnt/data
        #     accessModes:
        #       - ReadWriteOnce
        #     resources:
        #       requests:
        #         storage: 1Gi
      #
      # -- (object)
      # Partition describes the partition created specifically for this NodeSet to be added.
      partition:
        #
        # -- (bool)
        # Enables this NodeSet's partition line to be added in Slurm.
        enabled: true
        #
        # -- (string)
        # Extra Slurm partition configuration appended onto the partition line.
        # Ref: https://slurm.schedmd.com/slurm.conf.html#lbAI
        config: >-
          State=UP
          MaxTime=INFINITE
      #
      # -- (string)
      # Set Slurm node GRES.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Gres_1
      # nodeGres: "gpus:amd=8"
      #
      # -- (list)
      # Set Slurm node Features as a list(string).
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Features
      nodeFeatures: []
      #
      # -- (string)
      # Set Slurm node weight for Slurm scheduling.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#OPT_Weight
      nodeWeight: 1
  #
  # -- (list)
  # Slurm Partitions by object list.
  partitions:
      #
      # -- (string)
      # Name of Partition. Must be unique.
    - name: all
      #
      # -- (bool)
      # Enables the partition in Slurm.
      enabled: true
      #
      # -- (list)
      # NodeSets to put into this Partition by name/key.
      # NOTE: 'ALL' is a Slurm meta value to mean all nodes in the system.
      nodesets:
        - ALL
      #
      # -- (string)
      # Extra Slurm partition configuration appended onto the partition line.
      # Ref: https://slurm.schedmd.com/slurm.conf.html#lbAI
      config: >-
        State=UP
        Default=YES
        MaxTime=INFINITE

#
# Slurm accounting (slurmdbd) configurations.
accounting:
  #
  # -- (bool)
  # Enables accounting services.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmdbd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
  resources: {}
    # requests:
    #   cpu: 1
    #   memory: 1Gi
    # limits:
    #   cpu: 2
    #   memory: 4Gi
  #
  # Configuration for an external accounting instance (slurmdbd).
  external:
    #
    # -- (bool)
    # Use an external acounting instance (slurmdbd) instead of deploying one.
    enabled: false
    #
    # -- (string)
    # The external acounting instance (slurmdbd) host.
    host: ""
    #
    # -- (integer)
    # The external acounting instance (slurmdbd) port.
    port: 6819

#
# `bitnami/mariadb` subchart configurations.
# Ref: https://github.com/bitnami/charts/blob/main/bitnami/mariadb/values.yaml
mariadb:
  enabled: true
  auth:
    username: slurm
    database: slurm_acct_db
    existingSecret: "slurm-mariadb-passwords"
  initdbScripts:
    # NOTE: https://slurm.schedmd.com/accounting.html#slurm-accounting-configuration-before-build
    slurm-accounting.sql: |-
      SET GLOBAL innodb_buffer_pool_size=(4 * 1024 * 1024 * 1024);
      SET GLOBAL innodb_log_file_size=(64 * 1024 * 1024);
      SET GLOBAL innodb_lock_wait_timeout=900;
      SET GLOBAL max_allowed_packet=(16 * 1024 * 1024);
  primary:
    persistence:
      enabled: false
      existingClaim: ""
      storageClass: standard
      labels: {}
      annotations: {}
      accessModes:
        - ReadWriteOnce
      size: 8Gi
      selector: {}
    priorityClassName: ""
  metrics:
    enabled: false
    serviceMonitor:
      enabled: false
  affinity: {}
  resources: {}

#
# Slurm REST API (slurmrestd) configurations.
restapi:
  #
  # -- (bool)
  # Enables restapi services.
  enabled: true
  #
  # -- (integer)
  # Set the number of replicas to deploy.
  replicas: 1
  #
  # -- (string)
  # Set the image pull policy.
  imagePullPolicy: IfNotPresent
  #
  # Set the image to use.
  image:
    #
    # -- (string)
    # Set the image repository to use.
    repository: ghcr.io/slinkyproject/slurmrestd
    #
    # -- (string)
    # Set the image tag to use.
    tag: 24.05-ubuntu-24.04
  #
  # -- (string)
  # Set the priority class to use.
  # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/pod-priority-preemption/#priorityclass
  priorityClassName: ""
  #
  # -- (object)
  # Set affinity for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  #
  # -- (object)
  # Set container resource requests and limits for Kubernetes Pod scheduling.
  # Ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/#resource-requests-and-limits-of-pod-and-container
  resources: {}
    # requests:
    #   cpu: 1
    #   memory: 1Gi
    # limits:
    #   cpu: 2
    #   memory: 4Gi

#
# `slurm-exporter` subchart configurations.
# Ref: https://github.com/SlinkyProject/slurm-exporter/-/blob/main/helm/slurm-exporter/values.yaml
slurm-exporter:
  exporter:
    enabled: true
    secretName: "slurm-token-exporter"
