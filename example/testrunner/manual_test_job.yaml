apiVersion: v1
kind: ServiceAccount
metadata:
  name: test-run
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: test-run-cluster-role
rules:
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - get
  - list
  - watch
  - create
  - update
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: test-run-rb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: test-run-cluster-role
subjects:
- kind: ServiceAccount
  name: test-run
  namespace: default
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: manual-config-map
  namespace: default
data: # file name within configmap should be config.json
  config.json: |
    {
      "TestConfig": {
        "GPU_HEALTH_CHECK": {
          "TestLocationTrigger": {
            "global": {
              "TestParameters": {
                "MANUAL": {
                  "TestCases": [
                    {
                      "Recipe": "gst_single",
                      "Iterations": 1,
                      "StopOnFailure": true,
                      "TimeoutSeconds": 600
                    }
                  ]
                }
              }
            },
            "node1": {
              "TestParameters": {
                "MANUAL": {
                  "TestCases": [
                    {
                      "Recipe": "babel",
                      "Iterations": 1,
                      "StopOnFailure": true,
                      "TimeoutSeconds": 600
                    }
                  ]
                }
              }
            }
          }
        }
      }
    }
---
apiVersion: batch/v1
kind: Job
metadata:
  name: test-runner-manual-trigger
  namespace: default
spec:
  template:
    spec:
      serviceAccountName: test-run
      nodeSelector:
        kubernetes.io/hostname: node1 # requesting to run test on node1
      volumes: # mount driver related directory and device interface
      - name: kfd
        hostPath:
          path: /dev/kfd
          type: CharDevice
      - name: dri
        hostPath:
          path: /dev/dri
          type: Directory
      - name: config-volume
        configMap:
          name: manual-config-map
      - hostPath: # Specify to use this directory on the host as volume
          path: /var/log/amd-test-runner
          type: DirectoryOrCreate
        name: test-runner-volume
      containers:
      - name: amd-test-runner
        image: docker.io/rocm/test-runner:v1.2.0-beta.0
        imagePullPolicy: IfNotPresent
        securityContext: # setup security context for container to get access to device related interfaces
          privileged: true
        volumeMounts:
        - mountPath: /dev/dri
          name: dri
        - mountPath: /dev/kfd
          name: kfd
        - mountPath: /var/log/amd-test-runner # Specify to mount host path volume into specific directory
          name: test-runner-volume
        env:
        - name: LOG_MOUNT_DIR # Use LOG_MOUNT_DIR envrionment variable to ask test runner to save logs in mounted directory
          value: /var/log/amd-test-runner
        - name: TEST_TRIGGER
          value: "MANUAL" # Set the TEST_TRIGGER environment variable to MANUAL for manual test
        - name: POD_NAME # Use downward API to pass pod name to test runner container
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_NAMESPACE # Use downward API to pass pod namespace to test runner container
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: NODE_NAME # Use downward API to pass host name to test runner container
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
      restartPolicy: Never
  backoffLimit: 0
  ttlSecondsAfterFinished: 120 # TTL for the job to be auto cleaned
