/*
Copyright (c) Advanced Micro Devices, Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: nodelabeller.go
//
// Generated by this command:
//
//	mockgen -source=nodelabeller.go -package=nodelabeller -destination=mock_nodelabeller.go NodeLabeller
//
// Package nodelabeller is a generated GoMock package.
package nodelabeller

import (
	reflect "reflect"

	v1alpha1 "github.com/ROCm/gpu-operator/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/apps/v1"
)

// MockNodeLabeller is a mock of NodeLabeller interface.
type MockNodeLabeller struct {
	ctrl     *gomock.Controller
	recorder *MockNodeLabellerMockRecorder
}

// MockNodeLabellerMockRecorder is the mock recorder for MockNodeLabeller.
type MockNodeLabellerMockRecorder struct {
	mock *MockNodeLabeller
}

// NewMockNodeLabeller creates a new mock instance.
func NewMockNodeLabeller(ctrl *gomock.Controller) *MockNodeLabeller {
	mock := &MockNodeLabeller{ctrl: ctrl}
	mock.recorder = &MockNodeLabellerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockNodeLabeller) EXPECT() *MockNodeLabellerMockRecorder {
	return m.recorder
}

// SetNodeLabellerAsDesired mocks base method.
func (m *MockNodeLabeller) SetNodeLabellerAsDesired(ds *v1.DaemonSet, devConfig *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetNodeLabellerAsDesired", ds, devConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetNodeLabellerAsDesired indicates an expected call of SetNodeLabellerAsDesired.
func (mr *MockNodeLabellerMockRecorder) SetNodeLabellerAsDesired(ds, devConfig any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetNodeLabellerAsDesired", reflect.TypeOf((*MockNodeLabeller)(nil).SetNodeLabellerAsDesired), ds, devConfig)
}
