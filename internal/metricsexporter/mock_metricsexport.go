/*
Copyright (c) Advanced Micro Devices, Inc. All rights reserved.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by MockGen. DO NOT EDIT.
// Source: metricsexport.go
//
// Generated by this command:
//
//	mockgen -source=metricsexport.go -package=metricsexport -destination=mock_metricsexport.go MetricsExport
//
// Package metricsexport is a generated GoMock package.
package metricsexporter

import (
	reflect "reflect"

	v1alpha1 "github.com/ROCm/gpu-operator/api/v1alpha1"
	gomock "go.uber.org/mock/gomock"
	v1 "k8s.io/api/apps/v1"
)

// MockMetricsExport is a mock of MetricsExport interface.
type MockMetricsExport struct {
	ctrl     *gomock.Controller
	recorder *MockMetricsExportMockRecorder
}

// MockMetricsExportMockRecorder is the mock recorder for MockMetricsExport.
type MockMetricsExportMockRecorder struct {
	mock *MockMetricsExport
}

// NewMockMetricsExport creates a new mock instance.
func NewMockMetricsExport(ctrl *gomock.Controller) *MockMetricsExport {
	mock := &MockMetricsExport{ctrl: ctrl}
	mock.recorder = &MockMetricsExportMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMetricsExport) EXPECT() *MockMetricsExportMockRecorder {
	return m.recorder
}

// SetMetricsExportAsDesired mocks base method.
func (m *MockMetricsExport) SetMetricsExportAsDesired(ds *v1.DaemonSet, devConfig *v1alpha1.DeviceConfig) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "SetMetricsExportAsDesired", ds, devConfig)
	ret0, _ := ret[0].(error)
	return ret0
}

// SetMetricsExportAsDesired indicates an expected call of SetMetricsExportAsDesired.
func (mr *MockMetricsExportMockRecorder) SetMetricsExportAsDesired(ds, devConfig any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SetMetricsExportAsDesired", reflect.TypeOf((*MockMetricsExport)(nil).SetMetricsExportAsDesired), ds, devConfig)
}
